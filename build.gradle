import org.apache.tools.ant.taskdefs.condition.Os
plugins {
  id "com.moowork.node" version "1.2.0"
}
apply plugin: 'groovy'
node {
  // Version of node to use.
  version = '8.9.2'
  // Version of npm to use.
  npmVersion = '5.5.1'
  // Base URL for fetching node distributions
  distBaseUrl = 'http://nodejs.org/dist'
  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true
  // Set the work directory for unpacking node
  workDir = file("${project.projectDir}/nodejs")
}
// task install(type: Exec){

//     if(Os.isFamily(Os.FAMILY_WINDOWS)) {
//       commandLine 'cmd', '/c', 'npm', 'install'
//     } else {
//       commandLine 'npm', 'install'
//     }    
// }
task setup(type: NodeTask, dependsOn: 'npmInstall'){
    // script = file( 'src/server.js' )
    script = file('node_modules/.bin/webpack.cmd')
}
task start(dependsOn: setup, type: Exec) {
   
        if(Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'cmd', '/c', 'npm', 'start'
        } else {
            commandLine 'npm', 'install'
        }    
   
}
defaultTasks 'start'
// ******************Above is working *************************

// plugins {
//   id "com.moowork.grunt" version "1.2.0"
// }
 
// defaultTasks 'gruntBuildWithOpts'
 
// node {
//   // Version of node to use.
//   version = '8.9.2'
//   // Version of npm to use.
//   npmVersion = '5.5.1'
//   // Base URL for fetching node distributions
//   distBaseUrl = 'http://nodejs.org/dist'
//   // If true, it will download node using above parameters.
//   // If false, it will try to use globally installed node.
//   download = true
//   // Set the work directory for unpacking node
//   workDir = file("${project.projectDir}/nodejs")
// }
 
// grunt {
//   // Set the directory where Gruntfile.js should be found
//   workDir = file("${project.projectDir}")
//   // Whether colors should output on the terminal
//   colors = true
//   // Whether output from Grunt should be buffered
//   bufferOutput = false
// }
 
// //this task lets us pass command line arguments to Grunt. 
// //the debug option is helpful with continuous integration issues.
// //'npmInstall' is exposed through the grunt plugin.
// task gruntBuildWithOpts(type: GruntTask, dependsOn:'npmInstall') {
//   args = ["default", "--debug"]
// }
 
// task wrapper(type: Wrapper) {
//   gradleVersion = '2.2.1'
// }